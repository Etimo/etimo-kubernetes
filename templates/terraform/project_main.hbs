# Buckets, if any
{{#each buckets}}
resource "digitalocean_spaces_bucket" "{{../project}}-{{../stage}}-{{name}}" {
  region = var.region
  name   = "{{../project}}-{{name}}-{{../stage}}"
}
{{/each}}


{{#each databases}}
resource "digitalocean_database_db" "{{@root.tfName}}_{{name}}_shared" {
  cluster_id = local.{{@root.stage}}_db_clusters["{{type}}"].id
  name       = "{{@root.tfName}}_{{name}}"
}

resource "digitalocean_database_user" "{{@root.tfName}}_{{name}}_shared" {
  cluster_id = local.{{@root.stage}}_db_clusters["{{type}}"].id
  name       = "{{@root.tfName}}_{{name}}"
}
{{/each}}

# Outputs
output "project__{{tfName}}" {
  value = {
    project = "{{project}}"
    stage = "{{stage}}"
    shared_databases = {
      {{#each databases}}
      {{name}} = {
        db_type = "{{type}}",
        name = "{{@root.tfName}}_{{name}}",
        port = local.{{@root.stage}}_db_clusters["{{type}}"].port,
        host = local.{{@root.stage}}_db_clusters["{{type}}"].host,
        private_host = local.{{@root.stage}}_db_clusters["{{type}}"].private_host,
        ca = local.{{@root.stage}}_db_certs["{{type}}"].certificate,
      },
      {{/each}}
    },
    shared_databases_users = {
      {{#each databases}}
      {{name}} = {
        name = "{{@root.tfName}}_{{name}}",
        password = digitalocean_database_user.{{@root.tfName}}_{{name}}_shared.password,
      },
     {{/each}}
    },
  }
  sensitive = true
}

# Logdna resources
resource "logdna_view" "{{tfName}}" {
  name  = "{{project}}"
  query = "namespace:{{project}}"
}
name: Provision
on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - "docs/"

concurrency: provision-${{ github.ref }}
jobs:
  provision:
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PUSH_TOKEN }}
      - run: git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
      - run: yarn

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_API_TOKEN }}
          terraform_wrapper: false

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: |
          doctl kubernetes cluster kubeconfig save --expiry-seconds 600 etimo-staging
          # doctl kubernetes cluster kubeconfig save --expiry-seconds 600 etimo-production

      - run: yarn validate

      - name: Terraform Format
        id: fmt
        working-directory: terraform
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        working-directory: terraform
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: terraform
        run: terraform validate -no-color

      - run: yarn all:pre-terraform

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: terraform
        run: terraform apply -auto-approve

      - run: yarn all:post-terraform
      - run: yarn send:kubeconfigs --mail-username ${{ secrets.MAIL_USERNAME }} --mail-password ${{ secrets.MAIL_PASSWORD }}

      - name: Terraform Format
        working-directory: terraform
        run: terraform fmt -recursive

      - name: Commit and push release
        continue-on-error: true
        run: |
          git config --global user.email ""
          git config --global user.name "release"
          git add .
          git commit -m "release: $(date +"%Y-%m-%dT%H:%M:%SZ") [skip ci]"
          git push

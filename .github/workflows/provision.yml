name: Provision
on:
  push:
    branches:
      - main
concurrency: provision-${{ github.ref }}
jobs:
  provision:
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
      - run: yarn

      # Validate everything before trying something
      - run: yarn render:owners --dry-run
      - run: yarn render:projects --dry-run

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_API_TOKEN }}
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        working-directory: terraform
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        working-directory: terraform
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: terraform
        run: terraform validate -no-color

      - name: Terraform Plan
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: |
          doctl kubernetes cluster kubeconfig save --expiry-seconds 600 etimo-staging
          doctl kubernetes cluster kubeconfig save --expiry-seconds 600 etimo-production

      - run: yarn all
        env:
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
